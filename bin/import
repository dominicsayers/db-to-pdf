#!/usr/bin/env ruby
# How to run this: rails r bin/import
require 'google_api'

class PlayerData
  def import
    puts 'No data found.' if response.values.empty?
    rows.each { |row| PlayerData::Row.new(row).import }
  end

  private

  def initialize(spreadsheet_id)
    @spreadsheet_id = spreadsheet_id
  end

  def response
    @response ||= GoogleAPI.new(@spreadsheet_id).response
  end

  def rows
    @rows ||= response.values
  end

  class Row
    def import
      player = Player.find_by(match_name: match_name) || Player.new(full_name: full_name)
      update_hash = {}

      puts "#{match_name}\t#{player.full_name}\t#{current}" # debug

      %i(
        date_of_birth allergic medication allergy_note medication_note tetanus school gp_name gp_address current
        pog1_name pog1_address pog1_phone1 pog1_phone2
        pog2_name pog2_address pog2_phone1 pog2_phone2
        ec_name ec_phone1 ec_phone2
        photo_gumshield photo_no_gumshield
      ).each do |field|
        current_value = player.send(field)
        updated_value = send(field)

        next if current_value == updated_value
        puts "    #{field}\t#{current_value}\t#{updated_value}"
        update_hash[field] = updated_value
      end

      player.update update_hash
      player.save!
    end

    private

    attr_reader :data

    def initialize(data)
      @data = data
    end

    def column(number)
      value = data[number].try(:strip)
      value.blank? ? nil : value
    end

    def fixup_phone(string)
      return unless string
      return if /n\s*\/*\s*a/i =~ string
      return if %w(0 -).include?(string)
      value = %w(2 7).include?(string[0]) ? "0#{string}" : string
      return value unless /0[\d ]+/ =~ value
      value.gsub!(' ', '')

      case value[0, 2]
      when '07'
        "#{value[0, 5]} #{value[5, 6]}"
      when '02'
        "#{value[0, 3]} #{value[3, 4]} #{value[7, 4]}"
      else
        value
      end
    end

    def phone_from_column(number)
      fixup_phone column(number)
    end

    def match_name
      @match_name ||= full_name.parameterize
    end

    def full_name
      @full_name ||= "#{given_name} #{family_name}"
    end

    def allergy_note
      @allergy_note ||= data[2] unless column(2).upcase == 'NO'
    end

    def medication_note
      @medication_note ||= data[3] unless column(3).upcase == 'NO'
    end

    def current
      @current_player ||= date_of_birth && (timestamp > '2016-09-01'.to_datetime) ? true : false
    end

    def photo_current_or_previous(col_current, col_previous)
      photo_candidate = column(col_current)

      if photo_candidate
        File.join(ENV['CLOUDINARY_ROOT'], photo_candidate)
      else
        photo_candidate = column(col_previous)

        File.join(ENV['CLOUDINARY_ROOT_PREVIOUS'], photo_candidate) if photo_candidate
      end
    end

    # Columns

    def timestamp
      @timestamp ||= data[0].to_datetime
    end

    def pog1_name
      @pog1_name ||= column 1
    end

    def allergic
      @allergic ||= (/no\b/i =~ column(2)).nil?
    end

    def medication
      @medication ||= (/no\b/i =~ column(3)).nil?
    end

    def given_name
      @given_name ||= column 4
    end

    def family_name
      @family_name ||= column 5
    end

    def pog1_address
      @pog1_address ||= column 6
    end

    def pog1_phone1
      @pog1_phone1 ||= phone_from_column 7
    end

    def pog1_phone2
      @pog1_phone2 ||= phone_from_column 8
    end

    def pog2_name
      @pog2_name ||= column 9
    end

    def pog2_address
      @pog2_address ||= column 10
    end

    def pog2_phone1
      @pog2_phone1 ||= phone_from_column 11
    end

    def pog2_phone2
      @pog2_phone2 ||= phone_from_column 12
    end

    def ec_name
      @ec_name ||= column 13
    end

    def ec_phone1
      @ec_phone1 ||= phone_from_column 14
    end

    def ec_phone2
      @ec_phone2 ||= phone_from_column 15
    end

    def tetanus
      @tetanus ||= column 16
    end

    def school
      @school ||= column 17
    end

    def gp_name
      @gp_name ||= column 18
    end

    def gp_address
      @gp_address ||= column 19
    end

    def date_of_birth
      @date_of_birth ||= data[20].to_datetime
    end

    def photo_gumshield
      @photo_gumshield ||= photo_current_or_previous(28, 32)
    end

    def photo_no_gumshield
      @photo_no_gumshield ||= photo_current_or_previous(29, 33)
    end
  end
end

PlayerData.new(ENV['GOOGLE_DOCS_SHEET_ID']).import
